{
    "review": [
        {
            "question": "스토리지 장비 및 자원을 소프트웨어로 가상화하여 물리적인 위치에 상관없이 통합적으로 스토리지 자원을 관리하고 확장할 수 있게 하는 기술",
            "answer": "SDS, Software Defined Storage, 소프트웨어 정의 스토리지"
        },
        {
            "question": "네트워크 인프라를 소프트웨어적으로 제어하고 관리할 수 있게 하는 기술로, 하드웨어 장비에서 제어부와 데이터 전송부를 분리하여 중앙에서 네트워크를 프로그래밍 방식으로 운영할 수 있도록 하는 기술",
            "answer": "SDN, Software Defined Network, 소프트웨어 정의 네트워크"
        },
        {
            "question": "현실 세계와 가상 세계가 상호작용하는 기술을 통합적으로 표현하는 용어로, AR과 VR을 포함하여 혼합현실 등의 다양한 실감형 기술을 포괄하는 개념",
            "answer": "XR, eXtended Reality, 확장현실"
        },
        {
            "question": "송신자가 하나의 패킷을 전송할 때 특정 그룹에 속한 다수의 수신자에게 동시에 전송하는 방식",
            "answer": "멀티캐스트, Multicast"
        },
        {
            "question": "송신자가 하나의 수신자에게만 데이터를 전송하는 방식으로, 일반적인 이메일 전송이나 웹 페이지 접속 등에서 사용되는 전송 방식",
            "answer": "유니캐스트, Unicast"
        },
        {
            "question": "송신자가 데이터를 전송하면 동일한 데이터를 받을 수 있는 여러 수신자 중 네트워크 상에서 송신자에게 가장 가까운 수신자 한 곳으로만 데이터가 전송되는 방식",
            "answer": "애니캐스트, Anycast"
        },
        {
            "question": "웹에 존재하는 데이터를 컴퓨터가 이해하고 처리할 수 있도록 구조화하고, 의미적인 정보를 추가하여 사용자가 원하는 정보의 검색과 추론을 가능하게 하는 차세대 웹 기술",
            "answer": "시멘틱 웹, Semantic Web"
        },
        {
            "question": "시맨틱 웹의 핵심 구성 요소로, 웹상에 존재하는 다양한 자원과 데이터의 의미를 명확히 정의하고, 자원 간의 관계, 속성, 규칙 및 개념 등을 체계적으로 정리하여 표현한 것",
            "answer": "온톨로지, Ontology"
        },
        {
            "question": "두 명의 개발자가 한 컴퓨터를 사용하여 동시에 코드를 작성하고 서로의 코드를 실시간으로 검토하는 XP 실천 항목",
            "answer": "짝 프로그래밍, Pair Programming"
        },
        {
            "question": "실제 구현에 앞서 테스트 코드를 먼저 작성하고 이를 기준으로 개발을 진행하는 XP 실천 항목",
            "answer": "테스트 주도 개발, TDD, Test Driven Development"
        },
        {
            "question": "사용자가 요구하는 소프트웨어의 입력, 출력, 질의, 데이터 파일, 인터페이스와 같은 구성요소를 분석하여 소프트웨어의 규모를 객관적으로 측정하는 비용 산정 방법",
            "answer": "기능점수, FP, Function Point"
        },
        {
            "question": "과거 프로젝트에서 얻은 경험 데이터 기반으로 통계적 분석을 통해 개발에 소요될 비용, 노력, 기간 등을 예측하는 방법으로, 소프트웨어의 크기를 LOC로 표현하고 이를 바탕으로 비용을 산정하는 방법",
            "answer": "COCOMO, Constructive Cost Model"
        },
        {
            "question": "네트워크 장비의 상태를 원격으로 관리하고 감시하기 위해 사용되는 프로토콜",
            "answer": "SNMP, Simple Network Management Protocol"
        },
        {
            "question": "데이터베이스 엔진 내에서 데이터가 디스크에 저장되기 직전에 데이터를 자동으로 암호화하는 방식. 응용프로그램의 수정이 전혀 필요하지 않고 암호화가 데이터베이스 엔진 수준에서 투명하게 이루어지는 암호화 방식",
            "answer": "TDE, Transparent Data Encryption"
        },
        {
            "question": "소프트웨어 개발 단계에서 코드 변경사항이 있을 때마다 자동적으로 코드의 빌드 및 테스트를 수행하여 문제를 조기에 발견하고 품질을 높이는 개발 프로세스",
            "answer": "CI, Continuous Integration, 지속적 통합"
        },
        {
            "question": "개발자가 작성한 소스 코드가 사용자에게 빠르게 전달될 수 있도록 소프트웨어의 빌드와 테스트, 배포의 과정을 자동화하여 신속한 소프트웨어 배포를 지원하는 프로세스",
            "answer": "CD, Continuous Deployment, Continuous Delivery, 지속적 배포"
        },
        {
            "question": "내부의 중요 데이터가 외부로 유출되는 것을 방지하기 위해 이메일, 메신저, 웹 등 모든 정보 유출 경로를 탐지하고 통제하는 보안 솔루션",
            "answer": "DLP, Data Loss Prevention, 데이터 유출 방지"
        },
        {
            "question": "수집된 보안 이벤트와 로그 정보를 통합적으로 관리하고 분석하여 실시간으로 위협을 탐지하고 관리자가 위협에 대응할 수 있도록 경고를 제공하는 보안 솔루션",
            "answer": "SIEM, Security Information and Event Management, 보안 정보 및 이벤트 관리"
        },
        {
            "question": "라우터 또는 호스트 간에 오류 메세지를 전달하거나 네트워크의 연결 상태를 점검하기 위한 제어 메세지용 프로토콜로 ping, traceroute 명령에서 사용된다.",
            "answer": "ICMP, Internet Control Message Protocol"
        },
        {
            "question": "멀티캐스트 그룹에 대한 호스트의 가입 및 탈퇴를 관리하고 라우터가 그룹 구성원 정보를 유지할 수 있도록 돕는 프로토콜로 IPv4 환경에서 멀티캐스트 통신을 지원한다.",
            "answer": "IGMP, Internet Group Management Protocol"
        },
        {
            "question": "현실 세계의 데이터를 가상공간에 복제하여 관리하는 기술",
            "answer": "디지털 트윈, Digital Twin"
        },
        {
            "question": "사람들이 3차원 가상세계에서 활동하는 공간",
            "answer": "메타버스, Metaverse"
        },
        {
            "question": "UI 설계 원칙 중 사용자 실수에 대한 복원 가능성과 함께 다양한 사용자 상황에 맞게 인터페이스를 조정할 수 있는 특성",
            "answer": "유연성, Flexibility"
        },
        {
            "question": "UI 설계 원칙 중 시스템이 사용자의 요구와 일치하며 기대한 결과를 정확하고 완전하게 제공할 수 있는 특성",
            "answer": "유효성, Validity"
        },
        {
            "question": "여러 프로세스가 동시에 접근하면 문제가 생길 수 있는 공유된 데이터나 자원을 포함한 특정한 코드 영역으로 반드시 보호되어야 하는 영역은?",
            "answer": "임계영역"
        },
        {
            "question": "시스템을 이루는 클래스의 정적인 구조와 각 클래스가 가지는 속성, 메서드 및 객체들 간의 상속, 연관, 의존 관계를 명확하게 나타내기 위해 사용하는 다이어그램",
            "answer": "클래스 다이어그램, Class Diagram"
        },
        {
            "question": "시스템이 실제로 동작할 때 특정 작업이나 기능을 수행하는 과정에서 나타나는 객체 간의 메시지 교환 순서와 상호작용을 시간의 흐름에 따라 시나리오 형태로 상세히 나타낸 다이어그램",
            "answer": "시퀀스 다이어그램, Sequence Diagram"
        },
        {
            "question": "입출력 장치가 준비되었을 때 장치가 직접 운영체제에 신호를 보내어 CPU가 다른 작업을 하다가도 이를 즉시 처리하도록 하는 방식",
            "answer": "인터럽트, Interrupt"
        },
        {
            "question": "장치가 가능한 속도보다 빠르게 데이터가 요청될 경우 작업 데이터를 임시로 보조기억장치에 저장해 두었다가 장치가 준비되면 순서대로 처리하는 방식",
            "answer": "스풀링, Spooling"
        },
        {
            "question": "운영체제가 입출력 장치의 준비 상태를 직접 주기적으로 확인하여 장치가 준비된 시점에 데이터를 처리하는 방식",
            "answer": "폴링, Polling"
        }
    ]
}