{
    "review": [
        {
            "question": "스토리지 장비 및 자원을 소프트웨어로 가상화하여 물리적인 위치에 상관없이 통합적으로 스토리지 자원을 관리하고 확장할 수 있게 하는 기술",
            "answer": "SDS, Software Defined Storage, 소프트웨어 정의 스토리지"
        },
        {
            "question": "네트워크 인프라를 소프트웨어적으로 제어하고 관리할 수 있게 하는 기술로, 하드웨어 장비에서 제어부와 데이터 전송부를 분리하여 중앙에서 네트워크를 프로그래밍 방식으로 운영할 수 있도록 하는 기술",
            "answer": "SDN, Software Defined Network, 소프트웨어 정의 네트워크"
        },
        {
            "question": "현실 세계와 가상 세계가 상호작용하는 기술을 통합적으로 표현하는 용어로, AR과 VR을 포함하여 혼합현실 등의 다양한 실감형 기술을 포괄하는 개념",
            "answer": "XR, eXtended Reality, 확장현실"
        },
        {
            "question": "송신자가 하나의 패킷을 전송할 때 특정 그룹에 속한 다수의 수신자에게 동시에 전송하는 방식",
            "answer": "멀티캐스트, Multicast"
        },
        {
            "question": "송신자가 하나의 수신자에게만 데이터를 전송하는 방식으로, 일반적인 이메일 전송이나 웹 페이지 접속 등에서 사용되는 전송 방식",
            "answer": "유니캐스트, Unicast"
        },
        {
            "question": "송신자가 데이터를 전송하면 동일한 데이터를 받을 수 있는 여러 수신자 중 네트워크 상에서 송신자에게 가장 가까운 수신자 한 곳으로만 데이터가 전송되는 방식",
            "answer": "애니캐스트, Anycast"
        },
        {
            "question": "웹에 존재하는 데이터를 컴퓨터가 이해하고 처리할 수 있도록 구조화하고, 의미적인 정보를 추가하여 사용자가 원하는 정보의 검색과 추론을 가능하게 하는 차세대 웹 기술",
            "answer": "시멘틱 웹, Semantic Web"
        },
        {
            "question": "시맨틱 웹의 핵심 구성 요소로, 웹상에 존재하는 다양한 자원과 데이터의 의미를 명확히 정의하고, 자원 간의 관계, 속성, 규칙 및 개념 등을 체계적으로 정리하여 표현한 것",
            "answer": "온톨로지, Ontology"
        },
        {
            "question": "두 명의 개발자가 한 컴퓨터를 사용하여 동시에 코드를 작성하고 서로의 코드를 실시간으로 검토하는 XP 실천 항목",
            "answer": "짝 프로그래밍, Pair Programming"
        },
        {
            "question": "실제 구현에 앞서 테스트 코드를 먼저 작성하고 이를 기준으로 개발을 진행하는 XP 실천 항목",
            "answer": "테스트 주도 개발, TDD, Test Driven Development"
        },
        {
            "question": "사용자가 요구하는 소프트웨어의 입력, 출력, 질의, 데이터 파일, 인터페이스와 같은 구성요소를 분석하여 소프트웨어의 규모를 객관적으로 측정하는 비용 산정 방법",
            "answer": "기능점수, FP, Function Point"
        },
        {
            "question": "과거 프로젝트에서 얻은 경험 데이터 기반으로 통계적 분석을 통해 개발에 소요될 비용, 노력, 기간 등을 예측하는 방법으로, 소프트웨어의 크기를 LOC로 표현하고 이를 바탕으로 비용을 산정하는 방법",
            "answer": "COCOMO, Constructive Cost Model"
        },
        {
            "question": "네트워크 장비의 상태를 원격으로 관리하고 감시하기 위해 사용되는 프로토콜",
            "answer": "SNMP, Simple Network Management Protocol"
        },
        {
            "question": "데이터베이스 엔진 내에서 데이터가 디스크에 저장되기 직전에 데이터를 자동으로 암호화하는 방식. 응용프로그램의 수정이 전혀 필요하지 않고 암호화가 데이터베이스 엔진 수준에서 투명하게 이루어지는 암호화 방식",
            "answer": "TDE, Transparent Data Encryption"
        },
        {
            "question": "소프트웨어 개발 단계에서 코드 변경사항이 있을 때마다 자동적으로 코드의 빌드 및 테스트를 수행하여 문제를 조기에 발견하고 품질을 높이는 개발 프로세스",
            "answer": "CI, Continuous Integration, 지속적 통합"
        },
        {
            "question": "개발자가 작성한 소스 코드가 사용자에게 빠르게 전달될 수 있도록 소프트웨어의 빌드와 테스트, 배포의 과정을 자동화하여 신속한 소프트웨어 배포를 지원하는 프로세스",
            "answer": "CD, Continuous Deployment, Continuous Delivery, 지속적 배포"
        },
        {
            "question": "내부의 중요 데이터가 외부로 유출되는 것을 방지하기 위해 이메일, 메신저, 웹 등 모든 정보 유출 경로를 탐지하고 통제하는 보안 솔루션",
            "answer": "DLP, Data Loss Prevention, 데이터 유출 방지"
        },
        {
            "question": "수집된 보안 이벤트와 로그 정보를 통합적으로 관리하고 분석하여 실시간으로 위협을 탐지하고 관리자가 위협에 대응할 수 있도록 경고를 제공하는 보안 솔루션",
            "answer": "SIEM, Security Information and Event Management, 보안 정보 및 이벤트 관리"
        },
        {
            "question": "라우터 또는 호스트 간에 오류 메세지를 전달하거나 네트워크의 연결 상태를 점검하기 위한 제어 메세지용 프로토콜로 ping, traceroute 명령에서 사용된다.",
            "answer": "ICMP, Internet Control Message Protocol"
        },
        {
            "question": "멀티캐스트 그룹에 대한 호스트의 가입 및 탈퇴를 관리하고 라우터가 그룹 구성원 정보를 유지할 수 있도록 돕는 프로토콜로 IPv4 환경에서 멀티캐스트 통신을 지원한다.",
            "answer": "IGMP, Internet Group Management Protocol"
        },
        {
            "question": "현실 세계의 데이터를 가상공간에 복제하여 관리하는 기술",
            "answer": "디지털 트윈, Digital Twin"
        },
        {
            "question": "사람들이 3차원 가상세계에서 활동하는 공간",
            "answer": "메타버스, Metaverse"
        },
        {
            "question": "UI 설계 원칙 중 사용자 실수에 대한 복원 가능성과 함께 다양한 사용자 상황에 맞게 인터페이스를 조정할 수 있는 특성",
            "answer": "유연성, Flexibility"
        },
        {
            "question": "UI 설계 원칙 중 시스템이 사용자의 요구와 일치하며 기대한 결과를 정확하고 완전하게 제공할 수 있는 특성",
            "answer": "유효성, Validity"
        },
        {
            "question": "여러 프로세스가 동시에 접근하면 문제가 생길 수 있는 공유된 데이터나 자원을 포함한 특정한 코드 영역으로 반드시 보호되어야 하는 영역은?",
            "answer": "임계영역"
        },
        {
            "question": "시스템을 이루는 클래스의 정적인 구조와 각 클래스가 가지는 속성, 메서드 및 객체들 간의 상속, 연관, 의존 관계를 명확하게 나타내기 위해 사용하는 다이어그램",
            "answer": "클래스 다이어그램, Class Diagram"
        },
        {
            "question": "시스템이 실제로 동작할 때 특정 작업이나 기능을 수행하는 과정에서 나타나는 객체 간의 메시지 교환 순서와 상호작용을 시간의 흐름에 따라 시나리오 형태로 상세히 나타낸 다이어그램",
            "answer": "시퀀스 다이어그램, Sequence Diagram"
        },
        {
            "question": "입출력 장치가 준비되었을 때 장치가 직접 운영체제에 신호를 보내어 CPU가 다른 작업을 하다가도 이를 즉시 처리하도록 하는 방식",
            "answer": "인터럽트, Interrupt"
        },
        {
            "question": "장치가 가능한 속도보다 빠르게 데이터가 요청될 경우 작업 데이터를 임시로 보조기억장치에 저장해 두었다가 장치가 준비되면 순서대로 처리하는 방식",
            "answer": "스풀링, Spooling"
        },
        {
            "question": "운영체제가 입출력 장치의 준비 상태를 직접 주기적으로 확인하여 장치가 준비된 시점에 데이터를 처리하는 방식",
            "answer": "폴링, Polling"
        },
        {
            "question": "소프트웨어 설계 기법의 하나로 시스템의 기능을 체계적으로 분석하고 설계하기 위해 계층적 구조를 가지는 여러 개의 차트로 표현한다. 이 기법은 사용자와 개발자 간의 효과적인 의사소통과 문서화를 목적으로 사용되며 이해가 쉽고 직관적이라는 장점이 있다.",
            "answer": "HIPO, HIPO 기법"
        },
        {
            "question": "이 차트는 HIPO 기법의 구성요소 중 하나로 전체 시스템의 계층적인 구조를 나타내며 시스템의 주요 기능들을 나열하고 이들을 세부 기능으로 분해하여 계층적 구조로 표현한다.",
            "answer": "가시적 도표"
        },
        {
            "question": "이 차트는 HIPO 기법의 구성요소 중 하나로 개별 모듈의 입력, 처리, 출력의 구체적인 흐름을 나타낸 차트이며 각 모듈의 상세한 논리를 표현한다.",
            "answer": "세부적 도표"
        },
        {
            "question": "두 개 이상의 트랜잭션이 같은 데이터 항목을 동시에 접근하여 갱신할 때 나중에 수행된 트랜잭션이 먼저 수행된 트랜잭션의 갱신 결과를 덮어써서 데이터 변경사항이 사라지는 문제",
            "answer": "갱신 분실"
        },
        {
            "question": "하나의 트랜잭션이 실패하여 Rollback 될 때 이 트랜잭션의 결과를 사용했던 다른 트랜잭션들까지 연쇄적으로 취소되어야 하는 현상",
            "answer": "연쇄 복귀"
        },
        {
            "question": "기존의 소프트웨어를 분석하여 명세서나 설계와 같은 높은 수준의 추상적인 형태로 변환하여 시스템의 논리와 구조를 파악하는 과정",
            "answer": "역공학"
        },
        {
            "question": "기존 소프트웨어의 기본적인 구조나 설계를 유지한 채 하드웨어 플랫폼, 운영체제, 프로그래밍 언어 등 기술적 환경을 최신 기술 환경으로 옮기는 작업",
            "answer": "이식"
        },
        {
            "question": "기존 보안 관리 시스템이 제공하는 위협 분석 및 경고 기능에 더해 인공지능 및 자동화 기술을 이용하여 보안 침해 사고가 발생했을 때 탐지에서부터 대응까지의 과정을 자동화하거나 효율적으로 조정하여 신속한 대응을 지원하는 플랫폼",
            "answer": "SOAR, Security Orchestration Automation and Response"
        },
        {
            "question": "기업의 모든 보안 정책과 관리 절차를 통합 관리하는 전사적 보안 관리 솔루션으로 보안 이벤트의 통합 관리 뿐만 아니라 기업 전체의 보안 정책, 위험 평가 및 규정 준수 등 보안과 관련된 모든 측면을 종합적으로 관리",
            "answer": "ESM, Enterprise Security Management"
        },
        {
            "question": "멀티 프로그래밍 환경에서 여러 프로세스가 공유 자원을 동시에 사용할 때 자원의 접근을 제어하여 상호 배제를 실현하고 프로세스 간 충돌을 방지하기 위한 동기화 도구로 정수형 변수와 두 가지 원자적 연산을 사용하여 구현된다.",
            "answer": "세마포어, Semaphore"
        },
        {
            "question": "동일한 키를 사용하여 데이터를 암호화하고 복호화하는 방식으로 암호화와 복호화의 속도가 빠르지만 키의 안전한 관리와 교환이 필수적인 암호화 기법이다. 대표적인 예로는 DES, AES 등이 있다.",
            "answer": "대칭키, 대칭키 암호화"
        },
        {
            "question": "서로 다른 두 개의 키를 사용하여 하나의 키로 암호화한 데이터를 다른 키로 복호화하는 방식이다. 키 관리가 용이하며 기밀성뿐만 아니라 전자서명 등에도 사용된다. 대표적인 예로는 RSA, ECC 등이 있다.",
            "answer": "비대칭키, 비대칭키 암호화"
        },
        {
            "question": "서로 다른 네트워크 구간을 이동하는 데이터 패킷을 암호화하고 사용자의 인증을 통해 안전하게 데이터를 전송하는 가상 사설망(VPN) 구축에 널리 활용되는 프로토콜이다.",
            "answer": "IPSec"
        },
        {
            "question": "이해관계자와 인터뷰, 브레인스토밍, 프로토타이핑 등의 방법을 활용하여 시스템 개발에 필요한 정보를 수집하고 파악하는 단계",
            "answer": "도출, 요구사항 도출"
        },
        {
            "question": "수집된 정보들을 철저히 검토하여 요구사항 간의 충돌, 누락된 사항, 모호성 및 시스템에 대한 구현 가능성을 점검하는 단계",
            "answer": "분석, 요구사항 분석"
        },
        {
            "question": "이해관계자들이 시스템 요구사항을 명확히 이해할 수 있도록 표준화된 형식과 문서로 작성하고 정리하는 단계",
            "answer": "명세, 요구사항 명세"
        },
        {
            "question": "작성된 문서와 모델이 고객의 실제 요구와 목적에 부합하는지 평가하고 최종 승인 전에 오류나 누락 사항을 점검하는 단계",
            "answer": "확인, 요구사항 확인"
        },
        {
            "question": "내부의 중요 데이터가 외부로 유출되는 것을 방지하기 위해 이메일, 메신저, 웹 등 모든 정보 유출 경로를 탐지하고 통제하는 보안 솔루션",
            "answer": "DLP, Data Loss Prevention"
        },
        {
            "question": "프로세스가 준비 상태에서 스케줄러에 의해 선택되어 실행 상태로 전환되는 과정",
            "answer": "디스패치, dispatch"
        },
        {
            "question": "프로세스의 내부 논리를 간략하게 서술한 것으로 구조적 영어, 의사 코드, 의사 결정표 등을 사용하여 개별 프로세스의 기능을 상세화 하는 데 사용된다.",
            "answer": "미니스펙, Minispec, 소단위 명세서"
        },
        {
            "question": "시스템의 상태 변화와 이벤트에 따른 반응을 나타내는 도구로 상태 및 전이를 사용하여 시스템의 동적 행위를 나타낸다.",
            "answer": "STD, State Transition Diagram, 데이터 흐름도"
        },
        {
            "question": "소프트웨어를 개발한 개발자 외에 별도의 독립된 테스트 팀이 수행하며 개발 환경이 아닌 실제 운영 환경과 유사한 환경에서 사용자의 요구사항과 비즈니스 절차에 맞추어 수행하는 테스트",
            "answer": "시스템 테스트, System Test"
        },
        {
            "question": "소프트웨어를 최종 사용자나 고객이 직접 참여하여 실제 운영 환경에서 요구사항을 충족하는지 검증하는 테스트",
            "answer": "인수 테스트, Acceptance Test"
        },
        {
            "question": "해시 처리 시 원본 데이터에 임의의 난수를 추가하여 같은 데이터라도 매번 다른 해시값을 생성하도록 만드는 기법, 레인보우 테이블 공격 방어",
            "answer": "솔팅, Salting"
        },
        {
            "question": "해시 연산을 반복 수행하여 공격자의 연산 비용을 높여 공격을 어렵게 만드는 기법",
            "answer": "키 스트레칭, Key Stretching"
        },
        {
            "question": "디지털 컨텐츠의 접근 및 사용을 암호화, 인증, 권한관리 등을 통해 제어함으로써 저작권자의 권리를 보호하는 기술",
            "answer": "DRM, Digital Rights Management"
        },
        {
            "question": "사설 IP 주소를 사용하는 내부 네트워크와 공인 IP 주소를 사용하는 외부 네트워크 사이에서 주소 변환을 수행하는 기술",
            "answer": "NAT"
        },
        {
            "question": "여러 개의 내부 사설 IP 주소를 하나의 공인 IP 주소와 다수의 포트 번호로 변환하는 방식",
            "answer": "PAT"
        },
        {
            "question": "데이터를 한 장치에서 다른 장치로 전송할 때 속도 차이를 해결하기 위해 데이터를 임시 저장 공간에 저장하는 방법",
            "answer": "버퍼링, Buffering"
        },
        {
            "question": "자주 참조되는 데이터를 접근 속도가 빠른 저장 장치에 보관하여 시스템 전체 성능을 높이는 방법",
            "answer": "캐싱, Caching"
        },
        {
            "question": "IPSec 구성하는 프로토콜 중 하나로 데이터의 무결성과 인증을 보장하지만 데이터 암호화 기능은 제공하지 않는 프로토콜",
            "answer": "AH, Authentication Header"
        },
        {
            "question": "IPSec 구성하는 프로토콜 중 하나로 데이터의 암호화와 인증, 무결성을 함께 제공하는 프로토콜",
            "answer": "ESP, Encapsulating Security Payload"
        },
        {
            "question": "무결성 모델 중 하나로 데이터 무결성을 유지하기 위해 정확하게 정의된 절차와 규칙을 따르도록 하는 상업적 보안 모델이다. 이 모델은 데이터에 접근하거나 데이터를 변경할 때 반드시 인증된 프로그램을 통해서만 접근하도록 제한함으로써 데이터의 비인가 변경을 방지하고 무결성을 보장한다. 특히 금융 시스템이나 상업적 응용 프로그램과 같이 정확한 절차 준수와 데이터의 정합성 유지가 필수적인 환경에서 많이 사용된다.",
            "answer": "Clark Wilson, 클락 윌슨"
        },
        {
            "question": "데이터베이스 암호화 방식 중 하나로 애플리케이션 수준에서 암호화 모듈을 사용하여 데이터를 암호화 하고 복호화 하는 방식이다. 이 방식은 데이터베이스의 종류나 벤더와 무관하게 암호화를 수행할 수 있어 유연성이 높지만 애플리케이션 코드 내에 암호화 로직을 구현하고 관리해야 하므로 개발과 유지보수 부담이 크다.",
            "answer": "API 방식"
        },
        {
            "question": "원격 시스템에 있는 함수를 마치 로컬 함수처럼 호출하여 사용할 수 있는 미들웨어 방식",
            "answer": "RPC, Remote Procedure Call"
        },
        {
            "question": "메세지 큐를 이용하여 데이터를 비동기적으로 전송하고 처리하는 미들웨어",
            "answer": "MOM, Message Oriented Middleware"
        },
        {
            "question": "프로그램 전체를 주기억장치에 모두 적재하지 않고 당장 실행에 필요한 일부 데이터만 주기억장치에 올린 후 나머지는 보조기억장치에 저장하여 마치 주기억장치의 용량이 더 큰 것 처럼 사용하는 기법",
            "answer": "가상 기억장치, Virtual Memory"
        },
        {
            "question": "주기억장치와 보조기억장치 간 데이터를 교환할 때 발생하는 작업",
            "answer": "스와핑, Swapping"
        },
        {
            "question": "네트워크에서 데이터를 전송할 때 특정 링크에서 전송할 수 있는 데이터 크기의 한계가 존재한다. 만약 패킷의 크기가 이 한계를 초과하게 되면 전송 도중에 패킷을 여러 개의 작은 조각으로 나누어 보내는 과정",
            "answer": "단편화, Fragmentation"
        },
        {
            "question": "각 네트워크 링크에서 전송 가능한 데이터 패킷의 최대 크기를 의미하는 용어",
            "answer": "MTU, Maximum Transmission Unit"
        },
        {
            "question": "이메일 내용을 암호화하고 전자서명을 지원하여 메세지의 무결성, 인증 및 부인 방지 기능을 제공하는 표준이다. 주로 비대칭키 암호화를 기반으로 하며 MIME 포맷을 확장하여 메세지를 보호한다.",
            "answer": "S/MIME, Secure/Multipurpose Internet Mail Extensions"
        },
        {
            "question": "이메일 뿐만 아니라 다양한 종류의 데이터를 보호하기 위해 사용할 수 있는 범용적인 암호화 기술로 메세지의 암호화 및 디지털 서명을 지원한다. 공개키 암호화를 이용해 데이터를 보호하며 이메일 보안을 포함해 데이터 및 파일 보안 용도로 폭넓게 활용된다.",
            "answer": "PGP, Pretty Good Privacy"
        }
    ]
}